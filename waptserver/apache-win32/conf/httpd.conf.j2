{% if windows %}
ServerRoot "{{ apache_root_folder }}"
Listen 80
LoadModule actions_module       modules/mod_actions.so
LoadModule alias_module         modules/mod_alias.so
LoadModule asis_module          modules/mod_asis.so
LoadModule auth_basic_module    modules/mod_auth_basic.so
LoadModule authn_default_module modules/mod_authn_default.so
LoadModule authn_file_module    modules/mod_authn_file.so
LoadModule authz_default_module modules/mod_authz_default.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_host_module   modules/mod_authz_host.so
LoadModule authz_user_module   modules/mod_authz_user.so
LoadModule autoindex_module    modules/mod_autoindex.so
LoadModule cgi_module          modules/mod_cgi.so
LoadModule dir_module          modules/mod_dir.so
LoadModule env_module          modules/mod_env.so
LoadModule include_module      modules/mod_include.so
LoadModule isapi_module        modules/mod_isapi.so
LoadModule log_config_module   modules/mod_log_config.so
LoadModule mime_module         modules/mod_mime.so
LoadModule negotiation_module  modules/mod_negotiation.so
LoadModule setenvif_module     modules/mod_setenvif.so
LoadModule proxy_module        modules/mod_proxy.so
LoadModule proxy_http_module   modules/mod_proxy_http.so
LoadModule rewrite_module      modules/mod_rewrite.so
{% if ssl %}
LoadModule ssl_module          modules/mod_ssl.so
{% endif %}
<IfModule !mpm_netware_module>
<IfModule !mpm_winnt_module>
User daemon
Group daemon
</IfModule>
</IfModule>
ServerAdmin admin@tranquilit.local
DocumentRoot "{{ wapt_repository_path }}"
<Directory />
    Options FollowSymLinks
    AllowOverride None
    Order deny,allow
    Deny from all
</Directory>
<Directory "{{ wapt_repository_path }}">
    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>
<FilesMatch "^\.ht">
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>
ErrorLog "logs/error.log"
LogLevel warn
<IfModule log_config_module>
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    <IfModule logio_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>
    CustomLog "logs/access.log" common
</IfModule>
DefaultType text/plain
<IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
</IfModule>
{% endif %}

{% if force_https %}
<VirtualHost *:80>
   ServerName {{ fqdn }}
   DocumentRoot "{{ wapt_repository_path }}"
   Redirect permanent / https://{{fqdn}}/
</VirtualHost>

{% else %} 

<VirtualHost *:80>

        DocumentRoot "{{ wapt_repository_path }}"

   {% if not windows %}
        LogLevel warn

      {% if debian %}
        CustomLog /var/log/apache2/wapt.log combined
        ErrorLog /var/log/apache2/wapt-error.log
      {% else %}
        CustomLog /var/log/httpd/wapt.log combined
        ErrorLog /var/log/httpd/wapt-error.log
      {% endif %}

   {% endif %}

        ProxyPass /wapt !
        ProxyPass /waptdev !
        ProxyPass /wapt-host !
        ProxyPass /wapt-group !
        ProxyPass /download.php !
        ProxyPass /wapt/icons !
        ProxyPass /debian !
        ProxyPass /waptwua !

        RewriteCond %{QUERY_STRING} transport=polling
        RewriteRule /(.*)$ http://127.0.0.1:8080/$1 [P] retry=0

        ProxyRequests off
        ProxyPass /socket.io/ ws://127.0.0.1:8080/socket.io/ retry=0
        ProxyPassReverse /socket.io/ ws://127.0.0.1:8080/socket.io/ retry=0

        ProxyPass / http://127.0.0.1:8080/ retry=0
        ProxyPassReverse / http://127.0.0.1:8080/ retry=0

        <Directory "{{ wapt_repository_path }}">
            Options Indexes FollowSymLinks MultiViews
            AllowOverride None
            Order allow,deny
                allow from all
        </Directory>

        <Directory "{{ wapt_repository_path }}/wapt-host">
            Options -Indexes
            AllowOverride None
            Order allow,deny
                allow from all
        </Directory>

</VirtualHost>

{% endif %} {# if force_https #}

 {% if redhat %}
Listen 443 https
<IfModule mod_ssl.c>
 {% else %}
    <IfModule ssl_module>
 {% endif %}

 {% if windows %}
Listen 443
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
SSLCertificateFile "{{ wapt_ssl_cert_file }}"
SSLCertificateKeyFile "{{ wapt_ssl_key_file }}"
 {% endif %}

{% if strict_https %}
<VirtualHost {{fqdn}}:443>
{% else %}
<VirtualHost _default_:443>
{% endif %}

        DocumentRoot "{{ wapt_repository_path }}"

        SSLCiphersuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA
        SSLHonorCipherOrder on

{% if not windows %}
        LogLevel warn
    {% if debian %}
        CustomLog /var/log/apache2/wapt.log combined
        ErrorLog /var/log/apache2/wapt-error.log
    {% else %}
        CustomLog /var/log/httpd/wapt.log combined
        ErrorLog /var/log/httpd/wapt-error.log
    {% endif %}
{% endif %}

        ProxyPass /wapt !
        ProxyPass /waptwua !
        ProxyPass /waptdev !
        ProxyPass /wapt-host !
        ProxyPass /wapt-group !
        ProxyPass /download.php !
        ProxyPass /wapt/icons !
        ProxyPass /debian !

        RewriteCond %{QUERY_STRING} transport=polling
        RewriteRule /(.*)$ http://127.0.0.1:8080/$1 [P] retry=0

        ProxyRequests off
        ProxyPass /socket.io/ ws://127.0.0.1:8080/socket.io/ retry=0
        ProxyPassReverse /socket.io/ ws://127.0.0.1:8080/socket.io/ retry=0

        ProxyPass / http://127.0.0.1:8080/ retry=0
        ProxyPassReverse / http://127.0.0.1:8080/ retry=0

        <Directory "{{ wapt_repository_path }}">
            Options Indexes FollowSymLinks MultiViews
            AllowOverride None
            Order allow,deny
            Allow from all
        </Directory>

        <Directory "{{ wapt_repository_path }}/wapt-host">
            Options -Indexes
            AllowOverride None
            Order allow,deny
            Allow from all
        </Directory>

        SSLEngine on
        SSLCertificateFile "{{ wapt_ssl_cert_file }}"
        SSLCertificateKeyFile "{{ wapt_ssl_key_file }}"
{% if use_kerberos %}
        <LocationMatch  "/(add_host|register)/*">
            AuthType Kerberos
            AuthName "Kerberos auth required for WAPT host registration"
            KrbMethodNegotiate On
            KrbMethodK5Passwd On
            KrbAuthRealms {{KRB5_REALM}}
            KrbLocalUserMapping On
            KrbServiceName HTTP/{{fqdn}}@{{KRB5_REALM}}
            Krb5KeyTab /etc/apache2/http-krb5.keytab
            require valid-user
            Order Allow,Deny
            Allow from all
            ProxyPass  http://127.0.0.1:8080/add_host
            ProxyPassReverse  http://127.0.0.1:8080/add_host
        </LocationMatch>


{% endif %}
</VirtualHost>
