####################################################################
HOME			= .
RANDFILE		= $ENV::HOME/.rnd
oid_section		= new_oids

[ new_oids ]
tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ req ]
default_bits		= 2048
distinguished_name	= req_distinguished_name
attributes		= req_attributes
x509_extensions	= %(req_extensions)s	# The extentions to add to the self signed cert
string_mask = utf8only
req_extensions = v3_req 

[ req_distinguished_name ]
countryName			= Country Name (2 letter code)
countryName_value		= %(country)s
countryName_min			= 2
countryName_max			= 2

localityName			= Locality Name (eg, city)
localityName_value              = %(locality)s

0.organizationName		 = Organization Name (eg, company)
0.organizationName_value = %(organization)s

organizationalUnitName        = Organizational Unit Name (eg, section)
organizationalUnitName_value  = %(unit)s

commonName              = Common Name (e.g. server FQDN or YOUR name)
commonName_max			= 64
commonName_value        = %(commonname)s

emailAddress			= Email Address
emailAddress_max		= 64
emailAddress_value      = %(email)s

[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min	= 4
challengePassword_max	= 20
unstructuredName		= An optional company name

[ v3_req  ] 
subjectKeyIdentifier   = hash
basicConstraints       = CA:FALSE
keyUsage               = digitalSignature
extendedKeyUsage       = codeSigning, msCodeInd, msCodeCom
nsCertType             = client, email, objsign

[ v3_ca ]
# Extensions for a typical CA
basicConstraints       = CA:true
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer

[ codesign_reqext ]
keyUsage                = critical,digitalSignature,keyCertSign
extendedKeyUsage        = critical,codeSigning
subjectKeyIdentifier    = hash

[ v3_ca_codesign_reqext ]
basicConstraints = CA:true
keyUsage                = critical,digitalSignature,keyCertSign
extendedKeyUsage        = critical,codeSigning
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
